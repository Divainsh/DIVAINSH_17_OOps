class Solution {
    public int minCostClimbingStairs(int[] cost) {
        int n = cost.length;
        
        // Base cases
        int prev1 = cost[0]; // Cost to reach first step
        int prev2 = cost[1]; // Cost to reach second step
        
        // If there are only two steps, return the minimum of them
        if (n == 2) {
            return Math.min(prev1, prev2);
        }
        
        // Iterate to calculate the minimum cost for each step
        for (int i = 2; i < n; i++) {
            int current = cost[i] + Math.min(prev1, prev2);
            prev1 = prev2; // Shift prev1 to prev2
            prev2 = current; // Update prev2 to current
        }
        
        // Minimum cost to reach the top
        return Math.min(prev1, prev2);
    }
}
